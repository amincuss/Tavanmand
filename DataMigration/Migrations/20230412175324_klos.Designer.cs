// <auto-generated />
using System;
using DataLayer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;


#nullable disable

namespace DataMigration.Migrations
{
    [DbContext(typeof(TavanmandContext))]
    [Migration("20230412175324_klos")]
    partial class klos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.TaskCategory", b =>
                {
                    b.Property<int>("TaskCategortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskCategortId"));

                    b.Property<bool?>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("TaskCategortId");

                    b.ToTable("TaskCategory");
                });

            modelBuilder.Entity("WebApplication1.Models.TaskList", b =>
                {
                    b.Property<int>("TaskListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskListId"));

                    b.Property<bool?>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("TaskCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("TaskModeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TaskListId")
                        .HasName("PK_Task_List");

                    b.HasIndex("TaskCategoryId");

                    b.HasIndex("TaskModeId");

                    b.ToTable("TaskList");
                });

            modelBuilder.Entity("WebApplication1.Models.TaskMode", b =>
                {
                    b.Property<int>("TaskModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskModeId"));

                    b.Property<bool?>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TaskModeId");

                    b.ToTable("TaskMode");
                });

            modelBuilder.Entity("WebApplication1.Models.TaskList", b =>
                {
                    b.HasOne("WebApplication1.Models.TaskCategory", "TaskCategory")
                        .WithMany("TaskList")
                        .HasForeignKey("TaskCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_TaskList_TaskCategory");

                    b.HasOne("WebApplication1.Models.TaskMode", "TaskMode")
                        .WithMany("TaskList")
                        .HasForeignKey("TaskModeId")
                        .IsRequired()
                        .HasConstraintName("FK_TaskList_TaskMode");

                    b.Navigation("TaskCategory");

                    b.Navigation("TaskMode");
                });

            modelBuilder.Entity("WebApplication1.Models.TaskCategory", b =>
                {
                    b.Navigation("TaskList");
                });

            modelBuilder.Entity("WebApplication1.Models.TaskMode", b =>
                {
                    b.Navigation("TaskList");
                });
#pragma warning restore 612, 618
        }
    }
}
